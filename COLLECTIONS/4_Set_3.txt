NavigableSet Arayüzü

SortedSet arayüzünden kalıtım almıştır.
Generic bir arayüzdür.

interface NavigableSet<E>

SortedSet tarafından sağlanan metotların yanında ceiling() ve headSet() gibi metotları sağlar.

*
*
*

NavigableSet<Integer> navigableSet = new TreeSet<>();
navigableSet.add(2);
navigableSet.add(1);
navigableSet.add(6);
navigableSet.add(3);
navigableSet.add(2);

// unique olduğu için size bakarsak 4 göreceğiz

System.out.print(navigable.size());

Iterator<Integer> iterator = navigable.iterator();
while(iterator.hasNext()){
    Integer next = iterator.next();
    System.out.println(next);
}

// iki varsa iki dönecek yoksa ondan büyük ona en yakın değeri döndürecek. tek değer dönecek
System.out.println(navigableSet.ceiling(2));

// üç veya daha küçük olan değeri getirir. yukarıdaki gibi.
System.out.println(navigable.floor(3));

// 1 den direkt daha küçük olan değeri ekrana getirir.
System.out.println(navigable.lower(1));

// 4 ten yukarıda olan tek değeri gönderecek
System.out.println(navigable.higher(4));

// headSet metoduna parametre olarak verdiğimiz değere kadar olan değerleri aynı bir set olarak bize geri döner.

SortedSet<Integer> headSet = navigableSet.headSet(5);
Iterator<Integer> iterator2 = sortedSet.iterator();
while(iterator2.hasNext()){
    System.out.println(iterator2.next());
}

// ekstradan true parametresini de verirsek bu zaman parametre olarak verdiğimiz değeride setin içerisine dahil ediyor.
SortedSet<Integer> headSet = navigableSet.headSet(5,true);



*
*
*

