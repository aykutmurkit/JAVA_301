
-   Map anahtar ve değer arasındaki ilişkiyi diğer bir deyişle 
    anahtar/değer çiftini saklayan bir nesnedir.

-   Verilen bir anahtara istinaden, anahtara karşılık gelen değer bulunabilir.
-   anahtar ve değer ayrı ayrı birer nesnedir.
-   anahtar unique olmak zorundadır.
-   değer aynı olabilir.

-   Iterator arayüzünü implemente etmez. 
-   Map için koleksiyon görünümü(collection view) elde edildikten sonra iterator yapısı kullanılabilir.

-   Map bir arayüzdür. Katı(concrete) , implementasyonları için;

    *   HashMap
    *   LinkedHashMap
    *   TreeMap

-   Generic bir arayüzdür.

arayüz Map<K,V>

-   Map giriş olarak anahtar/değer çifti alır.
-   anahtar biliniyorsa değer çağrılabilir.
-   Map sıralama yapmaz ve eşsiz anahtarlar ister.
-   TreeMap eşleme tablosunda anahtarları sıralı şekilde tutar.

-   hashmap içinde olmayan bir değer döndürürsen null döner.

.
.
.

HashMap<Integer, String> hashMap = new HashMap<>();
hashMap.put(34,"Istanbul");
hashMap.put(35,"Izmir");
hashMap.put(6,"Ankara");

System.out.println(hashMap.size()); // mapin sizenı verir

// aynı key değeri ile yeni bir değer girdiğinde override eder değişir aynı değerden iki tane daha olmaz.

String string = hashMap.get(10);
System.out.println(string);


Set<Interger> keySet = hashmap.keySet();

Iterator<Integer> iterator = keySet.iterator();
while(iterator.hasNext()){
    Integer key = iterator.next();
    System.out.print("key: "+key);
    String value = hashMap.get(key);
    System.out.println(value);
}

